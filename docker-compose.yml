services:
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    build:
      context: .
      dockerfile: docker/postgresql/Dockerfile
    image: postgres:16-alpine
    environment:
      POSTGRES_MULTIPLE_DATABASES: ${DB_NAME},backups_db
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 60s
      retries: 12

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      # TODO: remove port by adding nginx routing (failed to do it last time due to static files)
      - 9001:9001
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 60s
      retries: 12

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - app-network

  postgresql_backup_ui:
    image: eduardolat/pgbackweb:latest
    ports:
      # TODO: remove port by adding nginx routing (failed to do it last time due to static files)
      - "8085:8085"
    environment:
      PBW_ENCRYPTION_KEY: ${PBW_ENCRYPTION_KEY}
      PBW_POSTGRES_CONN_STRING: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:${DB_PORT}/backups_db?sslmode=disable"
      TZ: "Europe/Moscow"
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
